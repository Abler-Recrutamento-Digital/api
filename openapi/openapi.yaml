openapi: 3.0.0
info:
  title: Abler API
  description:
    $ref: description.md
  version: 1.0.0
servers:
  - url: 'https://api.abler.com.br/v1'
tags:
  - name: Auth
    description: Rotas relacionadas a autenticação
  - name: Clientes
    description: Rotas relacionadas aos clientes de sua empresa
  - name: Vagas
    description: Rotas relacionadas as vagas de sua empresa
  - name: Coleções
    description: Rotas relacionadas a coleções da empresa
  - name: Enum
    description: Rotas relacionadas a enums da empresa
  - name: Webhook
    description: 
      "
      Você pode se inscrever em um dos eventos disponíveis e a Abler notificará quando este evento for disparado<br>
      <ol>
        <li>Use os endpoints de webhook_subscription para registrar seu endpoint;</li>
        <li>Quando o evento for disparado, a Abler irá enviar um POST para o endpoint registrado naquele evento.</li>
      </ol>
      Em seguida serão exibidos a lista de eventos disponíveis.    
      "
webhooks:
  vacancy_created:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de criação de Vaga
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer                  
                event:
                  type: string
                  enum: 
                   - vacancy_created                  
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
  vacancy_updated:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de atualização da vaga
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer                  
                event:
                  type: string
                  enum: 
                   - vacancy_updated                  
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
  vacancy_deleted:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de exclusão da vaga
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer                  
                event:
                  type: string
                  enum: 
                   - vacancy_deleted                  
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
  candidature_created:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de criação de candidatura
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer  
                candidate_id:
                  type: integer  
                event:
                  type: string
                  enum: 
                   - candidature_created                  
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
  candidature_updated:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de atualização de candidatura
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer  
                candidate_id:
                  type: integer  
                event:
                  type: string
                  enum: 
                   - candidature_updated                  
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
  candidature_disqualified:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de desqualificação de candidato
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer  
                candidate_id:
                  type: integer  
                event:
                  type: string
                  enum: 
                   - candidature_disqualified   
                disqualified_at:
                  type: datetime
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
  candidature_requalified:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de requalificação de candidato
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer  
                candidate_id:
                  type: integer  
                event:
                  type: string
                  enum: 
                   - candidature_requalified                  
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
  candidate_hired:  
    post:
      tags:
        - Webhook      
      requestBody:
        description: Informação sobre o evento de contratação de candidato
        content:
          application/json:
            schema: 
              properties:
                vacancy_id:
                  type: integer  
                candidate_id:
                  type: integer  
                event:
                  type: string
                  enum: 
                   - candidate_hired    
                salary: 
                  type: float
                contracting_regime: 
                  type: string
                  enum:                     
                    - aprendiz
                    - avaliacao_psicologica
                    - clt
                    - contrato_hibrido
                    - estagiario
                    - freelancer
                    - intermitente
                    - periodo_determinado
                    - pj
                    - profissional_independente_contrato_societario
                    - staff
                    - temporario
                    - terceiro
                requisition_type: 
                  type: string
                  enum:                     
                    - administracao_contrato
                    - alocacao
                    - banco_talentos
                    - expansao
                    - hunting
                    - reposicao
                    - substituicao
                cpf_substituted: 
                  type: string
                reason_of_demand: 
                  type: string
                candidate_name: 
                  type: string
                candidate_email: 
                  type: string
                candidate_cell_phone: 
                  type: string
                  format: (00) 00000-0000
                initial_date: 
                  type: date
                  format: YYYY-MM-DD                  
                additional_info:
                  type: string
      responses:
        200:
          description: Deve ser retornado 200 para indicar que os dados foram recebidos corretamente
paths:
  /auth/login:
    $ref: paths/auth/login.yaml
  /auth/logout:
    $ref: paths/auth/logout.yaml
  /customers:
    $ref: paths/customers/index_create.yaml  
  /customers/{id}:
    $ref: paths/customers/resources.yaml
  /vacancies:
    $ref: paths/vacancies/index.yaml
  /vacancies/{id}:
    $ref: paths/vacancies/resources.yaml        
  /vacancies/{id}/candidates:
    $ref: paths/vacancies/candidate.yaml
  /vacancies/{id}/candidates/{candidate_id}:
    $ref: paths/vacancies/candidates.yaml
  /subscriptions:
    $ref: paths/webhook_subscriptions/index_create.yaml
  /subscriptions/{id}:
    $ref: paths/webhook_subscriptions/resources.yaml  
  /collections/benefits:
    $ref: paths/collections/benefits.yaml
  /collections/cities:
    $ref: paths/collections/cities.yaml
  /collections/disabilities:
    $ref: paths/collections/disabilities.yaml
  /collections/states:
    $ref: paths/collections/states.yaml
  /collections/customers:
    $ref: paths/collections/customers.yaml
  /enums/cnhs:
    $ref: paths/enums/cnh.yaml
  /enums/requisition_types:
    $ref: paths/enums/requisition_type.yaml
  /enums/contracting_regimes:
    $ref: paths/enums/contracting_regime.yaml
  /enums/licenses:
    $ref: paths/enums/license.yaml
  /enums/benefit_value_types:
    $ref: paths/enums/benefit_value_type.yaml
  /enums/benefit_periodicities:
    $ref: paths/enums/benefit_periodicities.yaml
components:
  securitySchemes:
    BearerToken:
      $ref: "./components/securitySchemes/BearerToken.yaml"
    AuthToken: 
      $ref: "./components/securitySchemes/AuthToken.yaml"
  schemas: 
    Customer:
      $ref: "./components/models/customer.yaml"
    Address:
      $ref: "./components/models/address.yaml"
    CustomerContact:
      $ref: "./components/models/customer_contact.yaml"
    Candidate:
      $ref: "./components/models/candidate.yaml"
    Vacancy:
      $ref: "./components/models/vacancy.yaml"
    Pipeline:
      $ref: "./components/models/pipeline.yaml"
    Relationship:
      $ref: "./components/models/relationship.yaml" 
    Team:
      $ref: "./components/models/team.yaml" 
    LevelOfInterest:
      $ref: "./components/models/level_of_interest.yaml"
    AreaOfInterest:
      $ref: "./components/models/area_of_interest.yaml"
    Benefit:
      $ref: "./components/models/benefit.yaml"
    VacanciesBenefit:
      $ref: "./components/models/vacancies_benefit.yaml"
    Language:
      $ref: "./components/models/language.yaml"
    VacanciesLanguage:
      $ref: "./components/models/vacancies_language.yaml"
    ComplementaryFormation:
      $ref: "./components/models/complementary_formation.yaml"
    WebhookSubscription:
      $ref: "./components/models/webhook_subscription.yaml"
    VacancyAdmissionInfo:
      $ref: "./components/models/vacancy_admission_info.yaml"
    CandidatesPipeline:
      $ref: "./components/models/candidates_pipeline.yaml"
    VacancyPayload:
      $ref: "./components/schemas/vacancy/payload.yaml"
    CandidatePayload:
      $ref: "./components/schemas/candidate/payload.yaml"
    CustomerPayload:
      $ref: "./components/schemas/customer/payload.yaml"
    Enum:
      $ref: "./components/models/enum.yaml"
    Disability:
      $ref: "./components/models/disability.yaml"
    City:
      $ref: "./components/models/city.yaml"
    State:
      $ref: "./components/models/state.yaml"